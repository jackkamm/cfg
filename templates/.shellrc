# -*- mode: sh; -*- 

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

## .bashrc ONLY

. ~/git-prompt.sh # see comment in ~/.bash_prompt for correct path
[[ -r ~/.bash_prompt ]] && . ~/.bash_prompt
# set window title to "edwin"
PS1='\[\e]0;edwin\a\]'$PS1

## .zshrc ONLY

[[ -r ~/.zsh_prompt ]] && . ~/.zsh_prompt

## emacs-term remote directory tracking

set_eterm_dir() {
    echo -e "\033AnSiTu" "$LOGNAME"
    echo -e "\033AnSiTh" "$(hostname)"
    echo -e "\033AnSiTc" "$(pwd)"
}

#if [ -n "$INSIDE_EMACS" ]; then
if [ "$TERM" = "eterm-color" ]; then
    # bash
    PROMPT_COMMAND=set_eterm_dir
    # zsh
    precmd_functions=($precmd_functions set_eterm_dir)
fi

## directory tracking emacs term
## https://stackoverflow.com/a/4101997/3718509
#if [ -n "$INSIDE_EMACS" ]; then
#   chpwd() { print -P "\033AnSiTc %d" }
#   print -P "\033AnSiTu %n"
#   print -P "\033AnSiTc %d"
#fi


## linux ONLY

alias ls='ls --color=auto'

## OSX emacs-term stuff, probably outdated....

# fixes broken term-send-backspace in emacs term in OSX
if [[ -n $INSIDE_EMACS && $(uname) == 'Darwin' ]]; then
    stty ek
    ## alternate solution:
    #stty erase 
fi
